plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs"
    id "kotlinx-serialization"
    id "kotlin-parcelize"
    id "dagger.hilt.android.plugin"
}

kapt {
    correctErrorTypes = true
}

apply from: '../signing.gradle'

android {
    namespace "tech.nagual.phoenix"
    compileSdkVersion 32
    buildToolsVersion "33.0.0"

    defaultConfig {
        applicationId 'tech.nagual.phoenix'

        minSdkVersion 29
        targetSdkVersion 32
        versionCode 60
        versionName '0.6.0'
        resValue 'string', 'app_version', versionName + ' (' + versionCode + ')'

        def documentsAuthorityValue = applicationId + ".provider"

        // Now we can use ${documentsAuthority} in our Manifest
        manifestPlaceholders =
                [documentsAuthority: documentsAuthorityValue]
        // Now we can use BuildConfig.DOCUMENTS_AUTHORITY in our code
        buildConfigField "String",
                "DOCUMENTS_AUTHORITY",
                "\"${documentsAuthorityValue}\""

        setProperty("archivesBaseName", "phoenix-$versionCode")
        vectorDrawables.useSupportLibrary = true
    }

    sourceSets {
        main {
            java.srcDirs += "src/main/kotlin"
        }

        debug {
            manifest.srcFile 'config/debug/AndroidManifest.xml'
        }

        release {
            manifest.srcFile 'config/release/AndroidManifest.xml'
        }
    }

    buildFeatures {
        viewBinding true
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }

        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/library_release.kotlin_module']
        }
    }


    splits.abi {
        enable true
        universalApk true
    }
    lint {
        checkReleaseBuilds false
        warning 'InvalidPackage', 'MissingTranslation'
    }
}

repositories {
    maven {
        url 'https://jitpack.io'
    }
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation(files("libs/magnet.aar"))
    implementation(files("libs/ipfslite.aar"))
    implementation project(path: ':common')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"

    // Common AndroidX
    implementation("androidx.appcompat:appcompat:1.4.2")
    implementation("androidx.exifinterface:exifinterface:1.3.3")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation("androidx.coordinatorlayout:coordinatorlayout:1.2.0")
    implementation("androidx.palette:palette-ktx:1.0.0")
    implementation("androidx.media:media:1.6.0")

    implementation("androidx.webkit:webkit:1.4.0")

    // AndroidX Room
    kapt("androidx.room:room-compiler:2.4.3")
    annotationProcessor 'androidx.room:room-compiler:2.4.3'
    implementation("androidx.room:room-runtime:2.4.3")
    implementation("androidx.room:room-ktx:2.4.3")

    // AndroidX Security
    implementation("androidx.security:security-crypto:1.1.0-alpha03")

    // AndroidX Work Manager
    implementation("androidx.work:work-runtime-ktx:2.7.1")

    // Camera
    implementation("androidx.camera:camera-core:1.2.0-alpha04")
    implementation("androidx.camera:camera-camera2:1.2.0-alpha04")
    implementation("androidx.camera:camera-lifecycle:1.2.0-alpha04")
    implementation("androidx.camera:camera-video:1.2.0-alpha04")
    implementation("androidx.camera:camera-view:1.2.0-alpha04")
    implementation("androidx.camera:camera-extensions:1.2.0-alpha04")

    // SQLCipher
    implementation("net.zetetic:android-database-sqlcipher:4.5.0@aar")

    // Hilt
    implementation("androidx.hilt:hilt-work:1.0.0")
    implementation("com.google.dagger:hilt-android:2.42")
    kapt("com.google.dagger:hilt-compiler:2.42")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Markwon
    implementation("io.noties.markwon:core:4.6.2")
    implementation("io.noties.markwon:editor:4.6.2")
    implementation("io.noties.markwon:linkify:4.6.2")
    implementation("io.noties.markwon:ext-strikethrough:4.6.2")
    implementation("io.noties.markwon:ext-tables:4.6.2")
    implementation("io.noties.markwon:ext-tasklist:4.6.2")
    implementation("me.saket:better-link-movement-method:2.2.0")

    // OpenStreetMap
    implementation('org.osmdroid:osmdroid-android:6.1.11')

    implementation('org.greenrobot:eventbus:3.2.0')

    implementation("com.google.zxing:core:3.4.1")
    implementation("com.journeyapps:zxing-android-embedded:4.3.0")

    implementation 'com.github.Armen101:AudioRecordView:1.0.5'

    // ExoPlayer
    implementation "com.google.android.exoplayer:exoplayer-core:2.18.1"
    implementation "com.google.android.exoplayer:exoplayer-ui:2.18.1"

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")
}
