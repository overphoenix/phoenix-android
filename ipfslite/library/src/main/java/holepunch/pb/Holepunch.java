// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holepunch.proto

package holepunch.pb;

public final class Holepunch {
  private Holepunch() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HolePunchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:holepunch.pb.HolePunch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
     * @return The type.
     */
    holepunch.pb.Holepunch.HolePunch.Type getType();

    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @return A list containing the obsAddrs.
     */
    java.util.List<com.google.protobuf.ByteString> getObsAddrsList();
    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @return The count of obsAddrs.
     */
    int getObsAddrsCount();
    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @param index The index of the element to return.
     * @return The obsAddrs at the given index.
     */
    com.google.protobuf.ByteString getObsAddrs(int index);
  }
  /**
   * <pre>
   * spec: https://github.com/libp2p/specs/blob/master/relay/DCUtR.md
   * </pre>
   *
   * Protobuf type {@code holepunch.pb.HolePunch}
   */
  public static final class HolePunch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:holepunch.pb.HolePunch)
      HolePunchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HolePunch.newBuilder() to construct.
    private HolePunch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolePunch() {
      type_ = 100;
      obsAddrs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HolePunch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HolePunch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              holepunch.pb.Holepunch.HolePunch.Type value = holepunch.pb.Holepunch.HolePunch.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                obsAddrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              obsAddrs_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          obsAddrs_ = java.util.Collections.unmodifiableList(obsAddrs_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return holepunch.pb.Holepunch.internal_static_holepunch_pb_HolePunch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return holepunch.pb.Holepunch.internal_static_holepunch_pb_HolePunch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              holepunch.pb.Holepunch.HolePunch.class, holepunch.pb.Holepunch.HolePunch.Builder.class);
    }

    /**
     * Protobuf enum {@code holepunch.pb.HolePunch.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONNECT = 100;</code>
       */
      CONNECT(100),
      /**
       * <code>SYNC = 300;</code>
       */
      SYNC(300),
      ;

      /**
       * <code>CONNECT = 100;</code>
       */
      public static final int CONNECT_VALUE = 100;
      /**
       * <code>SYNC = 300;</code>
       */
      public static final int SYNC_VALUE = 300;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 100: return CONNECT;
          case 300: return SYNC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return holepunch.pb.Holepunch.HolePunch.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:holepunch.pb.HolePunch.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public holepunch.pb.Holepunch.HolePunch.Type getType() {
      @SuppressWarnings("deprecation")
      holepunch.pb.Holepunch.HolePunch.Type result = holepunch.pb.Holepunch.HolePunch.Type.valueOf(type_);
      return result == null ? holepunch.pb.Holepunch.HolePunch.Type.CONNECT : result;
    }

    public static final int OBSADDRS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> obsAddrs_;
    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @return A list containing the obsAddrs.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getObsAddrsList() {
      return obsAddrs_;
    }
    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @return The count of obsAddrs.
     */
    public int getObsAddrsCount() {
      return obsAddrs_.size();
    }
    /**
     * <code>repeated bytes ObsAddrs = 2;</code>
     * @param index The index of the element to return.
     * @return The obsAddrs at the given index.
     */
    public com.google.protobuf.ByteString getObsAddrs(int index) {
      return obsAddrs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < obsAddrs_.size(); i++) {
        output.writeBytes(2, obsAddrs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < obsAddrs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(obsAddrs_.get(i));
        }
        size += dataSize;
        size += 1 * getObsAddrsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof holepunch.pb.Holepunch.HolePunch)) {
        return super.equals(obj);
      }
      holepunch.pb.Holepunch.HolePunch other = (holepunch.pb.Holepunch.HolePunch) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (!getObsAddrsList()
          .equals(other.getObsAddrsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (getObsAddrsCount() > 0) {
        hash = (37 * hash) + OBSADDRS_FIELD_NUMBER;
        hash = (53 * hash) + getObsAddrsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static holepunch.pb.Holepunch.HolePunch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static holepunch.pb.Holepunch.HolePunch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static holepunch.pb.Holepunch.HolePunch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(holepunch.pb.Holepunch.HolePunch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * spec: https://github.com/libp2p/specs/blob/master/relay/DCUtR.md
     * </pre>
     *
     * Protobuf type {@code holepunch.pb.HolePunch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:holepunch.pb.HolePunch)
        holepunch.pb.Holepunch.HolePunchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return holepunch.pb.Holepunch.internal_static_holepunch_pb_HolePunch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return holepunch.pb.Holepunch.internal_static_holepunch_pb_HolePunch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                holepunch.pb.Holepunch.HolePunch.class, holepunch.pb.Holepunch.HolePunch.Builder.class);
      }

      // Construct using holepunch.pb.Holepunch.HolePunch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 100;
        bitField0_ = (bitField0_ & ~0x00000001);
        obsAddrs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return holepunch.pb.Holepunch.internal_static_holepunch_pb_HolePunch_descriptor;
      }

      @java.lang.Override
      public holepunch.pb.Holepunch.HolePunch getDefaultInstanceForType() {
        return holepunch.pb.Holepunch.HolePunch.getDefaultInstance();
      }

      @java.lang.Override
      public holepunch.pb.Holepunch.HolePunch build() {
        holepunch.pb.Holepunch.HolePunch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public holepunch.pb.Holepunch.HolePunch buildPartial() {
        holepunch.pb.Holepunch.HolePunch result = new holepunch.pb.Holepunch.HolePunch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) != 0)) {
          obsAddrs_ = java.util.Collections.unmodifiableList(obsAddrs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.obsAddrs_ = obsAddrs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof holepunch.pb.Holepunch.HolePunch) {
          return mergeFrom((holepunch.pb.Holepunch.HolePunch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(holepunch.pb.Holepunch.HolePunch other) {
        if (other == holepunch.pb.Holepunch.HolePunch.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.obsAddrs_.isEmpty()) {
          if (obsAddrs_.isEmpty()) {
            obsAddrs_ = other.obsAddrs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureObsAddrsIsMutable();
            obsAddrs_.addAll(other.obsAddrs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        holepunch.pb.Holepunch.HolePunch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (holepunch.pb.Holepunch.HolePunch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 100;
      /**
       * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public holepunch.pb.Holepunch.HolePunch.Type getType() {
        @SuppressWarnings("deprecation")
        holepunch.pb.Holepunch.HolePunch.Type result = holepunch.pb.Holepunch.HolePunch.Type.valueOf(type_);
        return result == null ? holepunch.pb.Holepunch.HolePunch.Type.CONNECT : result;
      }
      /**
       * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(holepunch.pb.Holepunch.HolePunch.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .holepunch.pb.HolePunch.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 100;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> obsAddrs_ = java.util.Collections.emptyList();
      private void ensureObsAddrsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          obsAddrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>(obsAddrs_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @return A list containing the obsAddrs.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getObsAddrsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(obsAddrs_) : obsAddrs_;
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @return The count of obsAddrs.
       */
      public int getObsAddrsCount() {
        return obsAddrs_.size();
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @param index The index of the element to return.
       * @return The obsAddrs at the given index.
       */
      public com.google.protobuf.ByteString getObsAddrs(int index) {
        return obsAddrs_.get(index);
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @param index The index to set the value at.
       * @param value The obsAddrs to set.
       * @return This builder for chaining.
       */
      public Builder setObsAddrs(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureObsAddrsIsMutable();
        obsAddrs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @param value The obsAddrs to add.
       * @return This builder for chaining.
       */
      public Builder addObsAddrs(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureObsAddrsIsMutable();
        obsAddrs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @param values The obsAddrs to add.
       * @return This builder for chaining.
       */
      public Builder addAllObsAddrs(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureObsAddrsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, obsAddrs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ObsAddrs = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearObsAddrs() {
        obsAddrs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:holepunch.pb.HolePunch)
    }

    // @@protoc_insertion_point(class_scope:holepunch.pb.HolePunch)
    private static final holepunch.pb.Holepunch.HolePunch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new holepunch.pb.Holepunch.HolePunch();
    }

    public static holepunch.pb.Holepunch.HolePunch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HolePunch>
        PARSER = new com.google.protobuf.AbstractParser<HolePunch>() {
      @java.lang.Override
      public HolePunch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HolePunch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolePunch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolePunch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public holepunch.pb.Holepunch.HolePunch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_holepunch_pb_HolePunch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_holepunch_pb_HolePunch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017holepunch.proto\022\014holepunch.pb\"i\n\tHoleP" +
      "unch\022*\n\004type\030\001 \002(\0162\034.holepunch.pb.HolePu" +
      "nch.Type\022\020\n\010ObsAddrs\030\002 \003(\014\"\036\n\004Type\022\013\n\007CO" +
      "NNECT\020d\022\t\n\004SYNC\020\254\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_holepunch_pb_HolePunch_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_holepunch_pb_HolePunch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_holepunch_pb_HolePunch_descriptor,
        new java.lang.String[] { "Type", "ObsAddrs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
